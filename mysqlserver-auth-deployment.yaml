apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqlserver-auth
  name: mysqlserver-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqlserver-auth
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/crookedrealm: "true"
        io.kompose.service: mysqlserver-auth
    spec:
      containers:
        - env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "true"
            - name: MYSQL_DATABASE
              value: auth
            - name: MYSQL_PASSWORD
              value: example
            - name: MYSQL_ROOT_PASSWORD
              value: example
            - name: MYSQL_TCP_PORT
              value: "3306"
            - name: MYSQL_USER
              value: dreamrealm
          image: mysql:8.0
          name: mysql-auth
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data-auth
            - mountPath: /etc/mysql/conf.d
              name: mysql-config-auth
      restartPolicy: Always
      volumes:
        - name: mysql-data-auth
          persistentVolumeClaim:
            claimName: mysql-data-auth
        - name: mysql-config-auth
          persistentVolumeClaim:
            claimName: mysql-config-auth
status: {}
